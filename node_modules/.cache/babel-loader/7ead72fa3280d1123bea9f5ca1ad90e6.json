{"ast":null,"code":"var _jsxFileName = \"/Users/konstantinstanmeyer/Development/code/practices/keyboard/src/Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Keyboard from \"./Keyboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Test() {\n  _s();\n  const word = \"yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes no no no no no no no no no no no no no no no no no\";\n  const [blur, setBlur] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [gameState, setGameState] = useState(\"not started\");\n  const inputField = document.querySelector(\"#typeInput\");\n  const keyDownTimer = useRef(null);\n  const [characterIndex, setCharacterIndex] = useState(0);\n  const [errors, setErrors] = useState(0);\n  const c = console.log.bind(document);\n  useEffect(() => {\n    const keyDownWait = 3000;\n    clearTimeout(keyDownTimer.current);\n    keyDownTimer.current = setTimeout(() => {\n      setBlur(true);\n      document.activeElement.blur();\n    }, keyDownWait);\n    window.addEventListener('keydown', e => {\n      const button = document.querySelector(`#${e.code.charAt(e.code.length - 1).toLowerCase()}`);\n      //fix\n      button.classList.remove('text-emerald-500');\n      button.classList.remove('bg-sky-900');\n      button.classList.add('bg-emerald-500');\n      button.classList.add('text-sky-900');\n      // inputField.disabled = false;\n    });\n\n    window.addEventListener('keyup', e => {\n      const button = document.querySelector(`#${e.code.charAt(e.code.length - 1).toLowerCase()}`);\n      let focus = document.querySelector(\"#typeInput\");\n      setBlur(false);\n      focus.focus();\n      clearTimeout(keyDownTimer.current);\n      if (gameState === \"not started\") {\n        keyDownTimer.current = setTimeout(() => {\n          setBlur(true);\n          document.activeElement.blur();\n        }, keyDownWait);\n      }\n      button.classList.remove('bg-emerald-500');\n      button.classList.remove('text-sky-900');\n      button.classList.add('bg-sky-900');\n      button.classList.add('text-emerald-500');\n    });\n  }, []);\n  function validatedWords(word) {\n    let lettersArray = [];\n    word.split(\"\").forEach(wordy => {\n      lettersArray.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-2xl\",\n        children: wordy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 31\n      }, this));\n    });\n    return lettersArray;\n  }\n  useEffect(() => {\n    let characters = document.querySelectorAll('span');\n    if (gameState === \"not started\" && inputValue !== \"\") {\n      setGameState(\"started\");\n    } else if (gameState === \"started\") {}\n    if (inputValue.length >= 1) {\n      typing();\n    }\n  }, [inputValue]);\n\n  //code for id'd and iterated word div's/pre p-tag switch\n\n  // function createWords(words, wordIndex){\n  //     return(\n  //         <div key={wordIndex} id={`word-${wordIndex}`} className=\"pl-2 h-8\">\n  //             {iterate(words)}\n  //         </div>\n  //     )\n  // }\n\n  // function iterate(word){\n  //     let letters = [];\n  //     for (let i = 0; i < word.length; i++) {\n  //         letters.push(<letter key={uuid()} id={`letter-${i}`} className=\"text-2xl font-mono\">{word[i]}</letter>);\n  //     }\n  //     return letters;\n  // }\n\n  // function iterateWords(words){\n  //     let wordsList = [];\n  //     for (let i = 0; i < words.length; i++){\n  //         wordsList.push(createWords(words[i], i));\n  //     }\n  //     return wordsList;\n  // }\n\n  // if (inputValue.length > 0) console.log(inputField.value.split(\"\")[0])\n\n  // useEffect(() => {\n  //     let characters = document.querySelectorAll('span')\n  //     if (inputValue[characterIndex] === undefined){\n  //         characters[characterIndex].classList.remove('text-green-500', 'text-red-500')\n  //     }\n  //     c(characterIndex)\n  // }, [characterIndex])\n\n  function typing() {\n    const characters = document.querySelectorAll('span');\n    c(characters[characterIndex].innerHTML);\n    c(inputValue[characterIndex]);\n    c(characterIndex);\n    if (inputValue[characterIndex] === characters[characterIndex].innerHTML) {\n      setCharacterIndex(characterIndex => characterIndex + 1);\n      characters[characterIndex].classList.add('text-green-500');\n      c(\"correct\");\n    } else if (inputValue[characterIndex] === undefined) {\n      let characterValue = characterIndex - 1;\n      characters[characterValue].classList.remove('text-green-500', 'text-red-500');\n      // c('backspace handled')\n      setCharacterIndex(characterIndex => characterIndex - 1);\n      // characters[characterIndex].classList.remove('text-green-500', 'text-red-500')\n      // c(characterIndex)\n    } else if (inputValue[characterIndex] !== characters[characterIndex].innerHTML) {\n      setCharacterIndex(characterIndex => characterIndex + 1);\n      characters[characterIndex].classList.add('text-red-500');\n      c(\"incorrect\");\n    } else if (inputValue.length == 0) {\n      setCharacterIndex(1);\n      characters[0].classList.remove('text-green-500', 'text-red-500');\n    }\n  }\n\n  // else if(inputValue[characterIndex] === undefined){\n  //     c('backspace handled')\n  //     setCharacterIndex(characterIndex - 1)\n  //     characters[characterIndex].classList.remove('text-green-500', 'text-red-500')\n  // }\n\n  // window.scrollY + document.querySelector('#elementId').getBoundingClientRect().top is for y or top coordinate\n  // window.scrollX + document.querySelector('#elementId').getBoundingClientRect().left is for x or left coordinate\n\n  // window.addEventListener('keydown', ({code}) => {\n  //     //fix\n  //     let button = document.querySelector(`#${code.charAt(code.length-1).toLowerCase()}`);\n  //     inputField.disabled = false;\n  //     button.classList.remove('text-emerald-500');\n  //     button.classList.remove('bg-sky-900');\n  //     button.classList.add('bg-emerald-500');\n  //     button.classList.add('text-sky-900');\n  //     console.log(1);\n  // })\n\n  // function validateInput(input){\n  //     let master = words\n  //     if(input !== \"\"){\n  //         switch(input){\n  //             case input.length == 1 && input.charAt(input.length -1) !== \" \":\n  //                 input == master[0][0] ? null : null\n\n  //                 break;\n  //             case input.length == 2 && input.charAt(input.length - 1) !== \" \":\n  //                 input\n\n  //                 break;\n  //             // case input.charAt(-1) === \" \"\n  //         }\n  //     }\n  // }\n\n  // if (gameState == \"started\") started();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"test-page\",\n    className: \"w-1/3 h-32 mx-auto relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"typeInput\",\n      autoFocus: true,\n      className: \"absolute mt-[9.5rem] -z-10\",\n      onFocus: () => setBlur(false),\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"test-zone\",\n      className: `h-fit justify-center flex mt-40 my-5 bg-emerald-600 rounded-lg ${blur ? 'blur-sm transition duration-300' : null} relative`,\n      onClick: () => inputField.focus(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"text-area\",\n        className: \"flex break-words z-0\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"word-zone\",\n          className: \"text-center select-none\",\n          children: validatedWords(word)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), blur ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"absolute\",\n      children: \"press any button to refocus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }, this) : null, /*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), gameState]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n}\n_s(Test, \"0+gW+tSfAxM1Bx7/1YhARphsXlI=\");\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Keyboard","Test","word","blur","setBlur","inputValue","setInputValue","gameState","setGameState","inputField","document","querySelector","keyDownTimer","characterIndex","setCharacterIndex","errors","setErrors","c","console","log","bind","keyDownWait","clearTimeout","current","setTimeout","activeElement","window","addEventListener","e","button","code","charAt","length","toLowerCase","classList","remove","add","focus","validatedWords","lettersArray","split","forEach","wordy","push","characters","querySelectorAll","typing","innerHTML","undefined","characterValue","target","value"],"sources":["/Users/konstantinstanmeyer/Development/code/practices/keyboard/src/Test.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Keyboard from \"./Keyboard\";\n\nexport default function Test(){\n    const word = \"yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes no no no no no no no no no no no no no no no no no\"\n    const [blur, setBlur] = useState(false);\n    const [inputValue, setInputValue] = useState(\"\");\n    const [gameState, setGameState] = useState(\"not started\");\n    const inputField = document.querySelector(\"#typeInput\");\n    const keyDownTimer = useRef(null);\n    const [characterIndex, setCharacterIndex] = useState(0)\n    const [errors, setErrors] = useState(0)\n    const c = console.log.bind(document)\n\n    useEffect(() => {\n        const keyDownWait = 3000\n        \n        clearTimeout(keyDownTimer.current)\n        keyDownTimer.current = setTimeout(() => {\n            setBlur(true);\n            document.activeElement.blur()\n        }, keyDownWait)\n\n        window.addEventListener('keydown', (e) => {\n            const button = document.querySelector(`#${e.code.charAt(e.code.length-1).toLowerCase()}`);\n            //fix\n            button.classList.remove('text-emerald-500');\n            button.classList.remove('bg-sky-900');\n            button.classList.add('bg-emerald-500');\n            button.classList.add('text-sky-900');\n            // inputField.disabled = false;\n        })\n\n        window.addEventListener('keyup', e => {\n            const button = document.querySelector(`#${e.code.charAt(e.code.length-1).toLowerCase()}`);\n            let focus = document.querySelector(\"#typeInput\");\n            setBlur(false);\n            focus.focus();\n            clearTimeout(keyDownTimer.current)\n            if(gameState === \"not started\") {\n                keyDownTimer.current = setTimeout(() => {\n                    setBlur(true);\n                    document.activeElement.blur();\n                }, keyDownWait)\n            }\n            button.classList.remove('bg-emerald-500');\n            button.classList.remove('text-sky-900');\n            button.classList.add('bg-sky-900');\n            button.classList.add('text-emerald-500');\n        })\n    }, [])\n\n    function validatedWords(word){\n        let lettersArray = [];\n        word.split(\"\").forEach((wordy) => {\n            lettersArray.push(<span className=\"text-2xl\">{wordy}</span>)\n        })\n        return lettersArray;\n    }\n\n\n    useEffect(() => {\n        let characters = document.querySelectorAll('span')\n        if(gameState === \"not started\" && inputValue !== \"\") {\n            setGameState(\"started\")\n        } else if (gameState === \"started\") {\n            \n        }\n        if (inputValue.length >= 1){\n            typing();\n        }\n    }, [inputValue])\n\n    //code for id'd and iterated word div's/pre p-tag switch\n\n    // function createWords(words, wordIndex){\n    //     return(\n    //         <div key={wordIndex} id={`word-${wordIndex}`} className=\"pl-2 h-8\">\n    //             {iterate(words)}\n    //         </div>\n    //     )\n    // }\n\n    // function iterate(word){\n    //     let letters = [];\n    //     for (let i = 0; i < word.length; i++) {\n    //         letters.push(<letter key={uuid()} id={`letter-${i}`} className=\"text-2xl font-mono\">{word[i]}</letter>);\n    //     }\n    //     return letters;\n    // }\n\n    // function iterateWords(words){\n    //     let wordsList = [];\n    //     for (let i = 0; i < words.length; i++){\n    //         wordsList.push(createWords(words[i], i));\n    //     }\n    //     return wordsList;\n    // }\n\n    // if (inputValue.length > 0) console.log(inputField.value.split(\"\")[0])\n\n    // useEffect(() => {\n    //     let characters = document.querySelectorAll('span')\n    //     if (inputValue[characterIndex] === undefined){\n    //         characters[characterIndex].classList.remove('text-green-500', 'text-red-500')\n    //     }\n    //     c(characterIndex)\n    // }, [characterIndex])\n\n    function typing(){\n        const characters = document.querySelectorAll('span');\n\n        c(characters[characterIndex].innerHTML);\n        c(inputValue[characterIndex]);\n        c(characterIndex);\n\n        if(inputValue[characterIndex] === characters[characterIndex].innerHTML){\n            setCharacterIndex(characterIndex => characterIndex + 1)\n            characters[characterIndex].classList.add('text-green-500')\n            c(\"correct\")\n        } else if (inputValue[characterIndex] === undefined ){\n            let characterValue = characterIndex - 1\n            characters[characterValue].classList.remove('text-green-500', 'text-red-500')\n            // c('backspace handled')\n            setCharacterIndex(characterIndex => characterIndex - 1)\n            // characters[characterIndex].classList.remove('text-green-500', 'text-red-500')\n            // c(characterIndex)\n        } else if(inputValue[characterIndex] !== characters[characterIndex].innerHTML) {\n            setCharacterIndex(characterIndex => characterIndex + 1)\n            characters[characterIndex].classList.add('text-red-500')\n            c(\"incorrect\")\n        } else if (inputValue.length == 0){\n            setCharacterIndex(1)\n            characters[0].classList.remove('text-green-500', 'text-red-500')\n        }\n    }\n\n    // else if(inputValue[characterIndex] === undefined){\n    //     c('backspace handled')\n    //     setCharacterIndex(characterIndex - 1)\n    //     characters[characterIndex].classList.remove('text-green-500', 'text-red-500')\n    // }\n\n\n    // window.scrollY + document.querySelector('#elementId').getBoundingClientRect().top is for y or top coordinate\n    // window.scrollX + document.querySelector('#elementId').getBoundingClientRect().left is for x or left coordinate\n\n\n    // window.addEventListener('keydown', ({code}) => {\n    //     //fix\n    //     let button = document.querySelector(`#${code.charAt(code.length-1).toLowerCase()}`);\n    //     inputField.disabled = false;\n    //     button.classList.remove('text-emerald-500');\n    //     button.classList.remove('bg-sky-900');\n    //     button.classList.add('bg-emerald-500');\n    //     button.classList.add('text-sky-900');\n    //     console.log(1);\n    // })\n\n    // function validateInput(input){\n    //     let master = words\n    //     if(input !== \"\"){\n    //         switch(input){\n    //             case input.length == 1 && input.charAt(input.length -1) !== \" \":\n    //                 input == master[0][0] ? null : null\n                    \n    //                 break;\n    //             case input.length == 2 && input.charAt(input.length - 1) !== \" \":\n    //                 input\n\n    //                 break;\n    //             // case input.charAt(-1) === \" \"\n    //         }\n    //     }\n    // }\n\n    // if (gameState == \"started\") started();\n\n    return (\n        <div id=\"test-page\" className=\"w-1/3 h-32 mx-auto relative\">\n            <input id=\"typeInput\" autoFocus className=\"absolute mt-[9.5rem] -z-10\" onFocus={() => setBlur(false)} value={inputValue} onChange={(e) => setInputValue(e.target.value)}/>\n            <div id=\"test-zone\" className={`h-fit justify-center flex mt-40 my-5 bg-emerald-600 rounded-lg ${blur ? 'blur-sm transition duration-300' : null} relative`} onClick={() => inputField.focus()}>\n                <div id=\"text-area\" className=\"flex break-words z-0\">\n                    <p id=\"word-zone\" className=\"text-center select-none\">{validatedWords(word)}</p>\n                </div>\n            </div>\n            {blur ? <p className=\"absolute\">press any button to refocus</p> : null}\n            <Keyboard />\n            {gameState}\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}