{"ast":null,"code":"var _jsxFileName = \"/Users/konstantinstanmeyer/Development/code/practices/keyboard/src/Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Keyboard from \"./Keyboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Test() {\n  _s();\n  const words = [\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\"];\n  const word = \"yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes no no no no no no no no no no no no no no no no no\";\n  const [blur, setBlur] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [gameState, setGameState] = useState(\"not started\");\n  const inputField = document.querySelector(\"#typeInput\");\n  const keyDownTimer = useRef(null);\n  const [valueHolder, setValueHolder] = useState(false);\n  const [characterIndex, setCharacterIndex] = useState(0);\n  const [wordIndex, setWordIndex] = useState(0);\n  let wordZone = document.querySelector('#word-zone');\n  const c = console.log.bind(document);\n  // console.log(wordZone)\n\n  useEffect(() => {\n    const keyDownWait = 3000;\n    if (valueHolder == false) {\n      clearTimeout(keyDownTimer.current);\n      keyDownTimer.current = setTimeout(() => {\n        setBlur(true);\n        document.activeElement.blur();\n      }, keyDownWait);\n      setValueHolder(true);\n    }\n    window.addEventListener('keydown', e => {\n      const button = document.querySelector(`#${e.code.charAt(e.code.length - 1).toLowerCase()}`);\n      //fix\n      button.classList.remove('text-emerald-500');\n      button.classList.remove('bg-sky-900');\n      button.classList.add('bg-emerald-500');\n      button.classList.add('text-sky-900');\n      // inputField.disabled = false;\n    });\n\n    window.addEventListener('keyup', e => {\n      const button = document.querySelector(`#${e.code.charAt(e.code.length - 1).toLowerCase()}`);\n      let focus = document.querySelector(\"#typeInput\");\n      setBlur(false);\n      focus.focus();\n      clearTimeout(keyDownTimer.current);\n      if (gameState === \"not started\") {\n        keyDownTimer.current = setTimeout(() => {\n          setBlur(true);\n          document.activeElement.blur();\n        }, keyDownWait);\n      }\n      button.classList.remove('bg-emerald-500');\n      button.classList.remove('text-sky-900');\n      button.classList.add('bg-sky-900');\n      button.classList.add('text-emerald-500');\n    });\n  }, []);\n  function validatedWords(word) {\n    let lettersArray = [];\n    word.split(\"\").forEach(wordy => {\n      lettersArray.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-lg\",\n        children: wordy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }, this));\n    });\n    return lettersArray;\n  }\n  useEffect(() => {\n    if (gameState === \"not started\" && inputValue !== \"\") {\n      setGameState(\"started\");\n    } else if (gameState === \"started\") {}\n    typing();\n  }, [inputValue]);\n\n  //code for id'd and iterated word div's/pre p-tag switch\n\n  // function createWords(words, wordIndex){\n  //     return(\n  //         <div key={wordIndex} id={`word-${wordIndex}`} className=\"pl-2 h-8\">\n  //             {iterate(words)}\n  //         </div>\n  //     )\n  // }\n\n  // function iterate(word){\n  //     let letters = [];\n  //     for (let i = 0; i < word.length; i++) {\n  //         letters.push(<letter key={uuid()} id={`letter-${i}`} className=\"text-2xl font-mono\">{word[i]}</letter>);\n  //     }\n  //     return letters;\n  // }\n\n  // function iterateWords(words){\n  //     let wordsList = [];\n  //     for (let i = 0; i < words.length; i++){\n  //         wordsList.push(createWords(words[i], i));\n  //     }\n  //     return wordsList;\n  // }\n\n  // if (inputValue.length > 0) console.log(inputField.value.split(\"\")[0])\n\n  function typing() {\n    let currentCharacter = '';\n    if (inputValue.split(\"\")[characterIndex]) {\n      if (inputField.length <= 1) {\n        currentCharacter = inputField[characterIndex];\n      } else {\n        currentCharacter = inputValue[characterIndex];\n      }\n    }\n    const characters = document.querySelectorAll('span');\n    // c(characters[characterIndex].innerHTML)\n    // c(characterIndex)\n    // c(inputValue[characterIndex])\n    // c(currentCharacter)\n    if (inputValue.value !== \"\" && currentCharacter !== '') {\n      if (inputValue[characterIndex] === characters[characterIndex].innerHTML) {\n        characters[characterIndex].classList.add('text-green-500');\n        c(\"correct\");\n        setCharacterIndex(characterIndex + 1);\n      } else if (inputValue[characterIndex] == undefined) {\n        c('backspace handled');\n        setCharacterIndex(characterIndex - 1);\n        characters[characterIndex].classList.remove('text-green-500', 'text-red-500');\n      } else {\n        characters[characterIndex].classList.add('text-red-500');\n        setCharacterIndex(characterIndex + 1);\n        c(\"incorrect\");\n      }\n    }\n  }\n\n  // window.scrollY + document.querySelector('#elementId').getBoundingClientRect().top is for y or top coordinate\n  // window.scrollX + document.querySelector('#elementId').getBoundingClientRect().left is for x or left coordinate\n\n  // window.addEventListener('keydown', ({code}) => {\n  //     //fix\n  //     let button = document.querySelector(`#${code.charAt(code.length-1).toLowerCase()}`);\n  //     inputField.disabled = false;\n  //     button.classList.remove('text-emerald-500');\n  //     button.classList.remove('bg-sky-900');\n  //     button.classList.add('bg-emerald-500');\n  //     button.classList.add('text-sky-900');\n  //     console.log(1);\n  // })\n\n  // function validateInput(input){\n  //     let master = words\n  //     if(input !== \"\"){\n  //         switch(input){\n  //             case input.length == 1 && input.charAt(input.length -1) !== \" \":\n  //                 input == master[0][0] ? null : null\n\n  //                 break;\n  //             case input.length == 2 && input.charAt(input.length - 1) !== \" \":\n  //                 input\n\n  //                 break;\n  //             // case input.charAt(-1) === \" \"\n  //         }\n  //     }\n  // }\n\n  function started() {\n    inputField.focus();\n    setBlur(false);\n  }\n\n  // if (gameState == \"started\") started();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"test-page\",\n    className: \"w-1/3 h-32 ml-2 pt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"typeInput\",\n      autoFocus: true,\n      className: \"z-10\",\n      onFocus: () => setBlur(false),\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"test-zone\",\n      className: `overflow-hidden h-24 bg-emerald-600 rounded-lg ${blur ? 'blur-sm transition duration-300' : null} relative`,\n      onClick: () => inputField.focus(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"text-area\",\n        className: \"flex break-words z-0 absolute\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"word-zone\",\n          className: \"\",\n          children: validatedWords(word)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), blur ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"absolute\",\n      children: \"press any button to refocus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }, this) : null, /*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), gameState]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n}\n_s(Test, \"z51UGI/sPuJLz2svWd1ZfJBlvZc=\");\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Keyboard","Test","words","word","blur","setBlur","inputValue","setInputValue","gameState","setGameState","inputField","document","querySelector","keyDownTimer","valueHolder","setValueHolder","characterIndex","setCharacterIndex","wordIndex","setWordIndex","wordZone","c","console","log","bind","keyDownWait","clearTimeout","current","setTimeout","activeElement","window","addEventListener","e","button","code","charAt","length","toLowerCase","classList","remove","add","focus","validatedWords","lettersArray","split","forEach","wordy","push","typing","currentCharacter","characters","querySelectorAll","value","innerHTML","undefined","started","target"],"sources":["/Users/konstantinstanmeyer/Development/code/practices/keyboard/src/Test.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Keyboard from \"./Keyboard\";\n\nexport default function Test(){\n    const words = [\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\"];\n    const word = \"yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes yes no no no no no no no no no no no no no no no no no\"\n    const [blur, setBlur] = useState(false);\n    const [inputValue, setInputValue] = useState(\"\");\n    const [gameState, setGameState] = useState(\"not started\");\n    const inputField = document.querySelector(\"#typeInput\");\n    const keyDownTimer = useRef(null);\n    const [valueHolder, setValueHolder] = useState(false)\n    const [characterIndex, setCharacterIndex] = useState(0)\n    const [wordIndex, setWordIndex] = useState(0)\n    let wordZone = document.querySelector('#word-zone')\n    const c = console.log.bind(document)\n    // console.log(wordZone)\n\n    useEffect(() => {\n        const keyDownWait = 3000\n        if (valueHolder == false) {\n            clearTimeout(keyDownTimer.current)\n            keyDownTimer.current = setTimeout(() => {\n                setBlur(true);\n                document.activeElement.blur()\n            }, keyDownWait)\n            setValueHolder(true)\n        }\n\n        window.addEventListener('keydown', (e) => {\n            const button = document.querySelector(`#${e.code.charAt(e.code.length-1).toLowerCase()}`);\n            //fix\n            button.classList.remove('text-emerald-500');\n            button.classList.remove('bg-sky-900');\n            button.classList.add('bg-emerald-500');\n            button.classList.add('text-sky-900');\n            // inputField.disabled = false;\n        })\n\n        window.addEventListener('keyup', e => {\n            const button = document.querySelector(`#${e.code.charAt(e.code.length-1).toLowerCase()}`);\n            let focus = document.querySelector(\"#typeInput\");\n            setBlur(false);\n            focus.focus();\n            clearTimeout(keyDownTimer.current)\n            if(gameState === \"not started\") {\n                keyDownTimer.current = setTimeout(() => {\n                    setBlur(true);\n                    document.activeElement.blur()\n                }, keyDownWait)\n            }\n            button.classList.remove('bg-emerald-500');\n            button.classList.remove('text-sky-900');\n            button.classList.add('bg-sky-900');\n            button.classList.add('text-emerald-500');\n        })\n    }, [])\n\n    function validatedWords(word){\n        let lettersArray = [];\n        word.split(\"\").forEach((wordy) => {\n            lettersArray.push(<span className=\"text-lg\">{wordy}</span>)\n        })\n        return lettersArray;\n    }\n\n\n    useEffect(() => {\n        if(gameState === \"not started\" && inputValue !== \"\") {\n            setGameState(\"started\")\n        } else if (gameState === \"started\") {\n            \n        }\n        typing();\n    }, [inputValue])\n\n    //code for id'd and iterated word div's/pre p-tag switch\n\n    // function createWords(words, wordIndex){\n    //     return(\n    //         <div key={wordIndex} id={`word-${wordIndex}`} className=\"pl-2 h-8\">\n    //             {iterate(words)}\n    //         </div>\n    //     )\n    // }\n\n    // function iterate(word){\n    //     let letters = [];\n    //     for (let i = 0; i < word.length; i++) {\n    //         letters.push(<letter key={uuid()} id={`letter-${i}`} className=\"text-2xl font-mono\">{word[i]}</letter>);\n    //     }\n    //     return letters;\n    // }\n\n    // function iterateWords(words){\n    //     let wordsList = [];\n    //     for (let i = 0; i < words.length; i++){\n    //         wordsList.push(createWords(words[i], i));\n    //     }\n    //     return wordsList;\n    // }\n\n    // if (inputValue.length > 0) console.log(inputField.value.split(\"\")[0])\n\n    function typing(){\n        let currentCharacter = '';\n        if (inputValue.split(\"\")[characterIndex]){\n            if (inputField.length <= 1){\n            currentCharacter = inputField[characterIndex]\n            } else {\n                currentCharacter = inputValue[characterIndex]\n            }\n        }\n        const characters = document.querySelectorAll('span')\n        // c(characters[characterIndex].innerHTML)\n        // c(characterIndex)\n        // c(inputValue[characterIndex])\n        // c(currentCharacter)\n        if(inputValue.value !== \"\" && currentCharacter !== ''){\n            if(inputValue[characterIndex] === characters[characterIndex].innerHTML){\n                characters[characterIndex].classList.add('text-green-500')\n                c(\"correct\")\n                setCharacterIndex(characterIndex + 1)\n            } else if(inputValue[characterIndex] == undefined){\n                c('backspace handled')\n                setCharacterIndex(characterIndex - 1)\n                characters[characterIndex].classList.remove('text-green-500', 'text-red-500')\n            } else {\n                characters[characterIndex].classList.add('text-red-500')\n                setCharacterIndex(characterIndex + 1)\n                c(\"incorrect\")\n            }\n        }\n    }\n\n    \n\n\n    // window.scrollY + document.querySelector('#elementId').getBoundingClientRect().top is for y or top coordinate\n    // window.scrollX + document.querySelector('#elementId').getBoundingClientRect().left is for x or left coordinate\n\n\n    // window.addEventListener('keydown', ({code}) => {\n    //     //fix\n    //     let button = document.querySelector(`#${code.charAt(code.length-1).toLowerCase()}`);\n    //     inputField.disabled = false;\n    //     button.classList.remove('text-emerald-500');\n    //     button.classList.remove('bg-sky-900');\n    //     button.classList.add('bg-emerald-500');\n    //     button.classList.add('text-sky-900');\n    //     console.log(1);\n    // })\n\n    // function validateInput(input){\n    //     let master = words\n    //     if(input !== \"\"){\n    //         switch(input){\n    //             case input.length == 1 && input.charAt(input.length -1) !== \" \":\n    //                 input == master[0][0] ? null : null\n                    \n    //                 break;\n    //             case input.length == 2 && input.charAt(input.length - 1) !== \" \":\n    //                 input\n\n    //                 break;\n    //             // case input.charAt(-1) === \" \"\n    //         }\n    //     }\n    // }\n\n    function started(){\n        inputField.focus();\n        setBlur(false)\n    }\n\n    // if (gameState == \"started\") started();\n\n    return (\n        <div id=\"test-page\" className=\"w-1/3 h-32 ml-2 pt-3\">\n            <input id=\"typeInput\" autoFocus className=\"z-10\" onFocus={() => setBlur(false)} value={inputValue} onChange={(e) => setInputValue(e.target.value)}/>\n            <div id=\"test-zone\" className={`overflow-hidden h-24 bg-emerald-600 rounded-lg ${blur ? 'blur-sm transition duration-300' : null} relative`} onClick={() => inputField.focus()}>\n                <div id=\"text-area\" className=\"flex break-words z-0 absolute\">\n                    <p id=\"word-zone\" className=\"\">{validatedWords(word)}</p>\n                </div>\n            </div>\n            {blur ? <p className=\"absolute\">press any button to refocus</p> : null}\n            <Keyboard />\n            {gameState}\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,eAAe,SAASC,IAAI,GAAE;EAAA;EAC1B,MAAMC,KAAK,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EACnQ,MAAMC,IAAI,GAAG,oNAAoN;EACjO,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,aAAa,CAAC;EACzD,MAAMY,UAAU,GAAGC,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;EACvD,MAAMC,YAAY,GAAGd,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EAC7C,IAAIsB,QAAQ,GAAGT,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;EACnD,MAAMS,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACb,QAAQ,CAAC;EACpC;;EAEAd,SAAS,CAAC,MAAM;IACZ,MAAM4B,WAAW,GAAG,IAAI;IACxB,IAAIX,WAAW,IAAI,KAAK,EAAE;MACtBY,YAAY,CAACb,YAAY,CAACc,OAAO,CAAC;MAClCd,YAAY,CAACc,OAAO,GAAGC,UAAU,CAAC,MAAM;QACpCvB,OAAO,CAAC,IAAI,CAAC;QACbM,QAAQ,CAACkB,aAAa,CAACzB,IAAI,EAAE;MACjC,CAAC,EAAEqB,WAAW,CAAC;MACfV,cAAc,CAAC,IAAI,CAAC;IACxB;IAEAe,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAGC,CAAC,IAAK;MACtC,MAAMC,MAAM,GAAGtB,QAAQ,CAACC,aAAa,CAAE,IAAGoB,CAAC,CAACE,IAAI,CAACC,MAAM,CAACH,CAAC,CAACE,IAAI,CAACE,MAAM,GAAC,CAAC,CAAC,CAACC,WAAW,EAAG,EAAC,CAAC;MACzF;MACAJ,MAAM,CAACK,SAAS,CAACC,MAAM,CAAC,kBAAkB,CAAC;MAC3CN,MAAM,CAACK,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;MACrCN,MAAM,CAACK,SAAS,CAACE,GAAG,CAAC,gBAAgB,CAAC;MACtCP,MAAM,CAACK,SAAS,CAACE,GAAG,CAAC,cAAc,CAAC;MACpC;IACJ,CAAC,CAAC;;IAEFV,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEC,CAAC,IAAI;MAClC,MAAMC,MAAM,GAAGtB,QAAQ,CAACC,aAAa,CAAE,IAAGoB,CAAC,CAACE,IAAI,CAACC,MAAM,CAACH,CAAC,CAACE,IAAI,CAACE,MAAM,GAAC,CAAC,CAAC,CAACC,WAAW,EAAG,EAAC,CAAC;MACzF,IAAII,KAAK,GAAG9B,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;MAChDP,OAAO,CAAC,KAAK,CAAC;MACdoC,KAAK,CAACA,KAAK,EAAE;MACbf,YAAY,CAACb,YAAY,CAACc,OAAO,CAAC;MAClC,IAAGnB,SAAS,KAAK,aAAa,EAAE;QAC5BK,YAAY,CAACc,OAAO,GAAGC,UAAU,CAAC,MAAM;UACpCvB,OAAO,CAAC,IAAI,CAAC;UACbM,QAAQ,CAACkB,aAAa,CAACzB,IAAI,EAAE;QACjC,CAAC,EAAEqB,WAAW,CAAC;MACnB;MACAQ,MAAM,CAACK,SAAS,CAACC,MAAM,CAAC,gBAAgB,CAAC;MACzCN,MAAM,CAACK,SAAS,CAACC,MAAM,CAAC,cAAc,CAAC;MACvCN,MAAM,CAACK,SAAS,CAACE,GAAG,CAAC,YAAY,CAAC;MAClCP,MAAM,CAACK,SAAS,CAACE,GAAG,CAAC,kBAAkB,CAAC;IAC5C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,SAASE,cAAc,CAACvC,IAAI,EAAC;IACzB,IAAIwC,YAAY,GAAG,EAAE;IACrBxC,IAAI,CAACyC,KAAK,CAAC,EAAE,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAK;MAC9BH,YAAY,CAACI,IAAI,eAAC;QAAM,SAAS,EAAC,SAAS;QAAA,UAAED;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,CAAC;IAC/D,CAAC,CAAC;IACF,OAAOH,YAAY;EACvB;EAGA9C,SAAS,CAAC,MAAM;IACZ,IAAGW,SAAS,KAAK,aAAa,IAAIF,UAAU,KAAK,EAAE,EAAE;MACjDG,YAAY,CAAC,SAAS,CAAC;IAC3B,CAAC,MAAM,IAAID,SAAS,KAAK,SAAS,EAAE,CAEpC;IACAwC,MAAM,EAAE;EACZ,CAAC,EAAE,CAAC1C,UAAU,CAAC,CAAC;;EAEhB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,SAAS0C,MAAM,GAAE;IACb,IAAIC,gBAAgB,GAAG,EAAE;IACzB,IAAI3C,UAAU,CAACsC,KAAK,CAAC,EAAE,CAAC,CAAC5B,cAAc,CAAC,EAAC;MACrC,IAAIN,UAAU,CAAC0B,MAAM,IAAI,CAAC,EAAC;QAC3Ba,gBAAgB,GAAGvC,UAAU,CAACM,cAAc,CAAC;MAC7C,CAAC,MAAM;QACHiC,gBAAgB,GAAG3C,UAAU,CAACU,cAAc,CAAC;MACjD;IACJ;IACA,MAAMkC,UAAU,GAAGvC,QAAQ,CAACwC,gBAAgB,CAAC,MAAM,CAAC;IACpD;IACA;IACA;IACA;IACA,IAAG7C,UAAU,CAAC8C,KAAK,KAAK,EAAE,IAAIH,gBAAgB,KAAK,EAAE,EAAC;MAClD,IAAG3C,UAAU,CAACU,cAAc,CAAC,KAAKkC,UAAU,CAAClC,cAAc,CAAC,CAACqC,SAAS,EAAC;QACnEH,UAAU,CAAClC,cAAc,CAAC,CAACsB,SAAS,CAACE,GAAG,CAAC,gBAAgB,CAAC;QAC1DnB,CAAC,CAAC,SAAS,CAAC;QACZJ,iBAAiB,CAACD,cAAc,GAAG,CAAC,CAAC;MACzC,CAAC,MAAM,IAAGV,UAAU,CAACU,cAAc,CAAC,IAAIsC,SAAS,EAAC;QAC9CjC,CAAC,CAAC,mBAAmB,CAAC;QACtBJ,iBAAiB,CAACD,cAAc,GAAG,CAAC,CAAC;QACrCkC,UAAU,CAAClC,cAAc,CAAC,CAACsB,SAAS,CAACC,MAAM,CAAC,gBAAgB,EAAE,cAAc,CAAC;MACjF,CAAC,MAAM;QACHW,UAAU,CAAClC,cAAc,CAAC,CAACsB,SAAS,CAACE,GAAG,CAAC,cAAc,CAAC;QACxDvB,iBAAiB,CAACD,cAAc,GAAG,CAAC,CAAC;QACrCK,CAAC,CAAC,WAAW,CAAC;MAClB;IACJ;EACJ;;EAKA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,SAASkC,OAAO,GAAE;IACd7C,UAAU,CAAC+B,KAAK,EAAE;IAClBpC,OAAO,CAAC,KAAK,CAAC;EAClB;;EAEA;;EAEA,oBACI;IAAK,EAAE,EAAC,WAAW;IAAC,SAAS,EAAC,sBAAsB;IAAA,wBAChD;MAAO,EAAE,EAAC,WAAW;MAAC,SAAS;MAAC,SAAS,EAAC,MAAM;MAAC,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAK,CAAE;MAAC,KAAK,EAAEC,UAAW;MAAC,QAAQ,EAAG0B,CAAC,IAAKzB,aAAa,CAACyB,CAAC,CAACwB,MAAM,CAACJ,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eACpJ;MAAK,EAAE,EAAC,WAAW;MAAC,SAAS,EAAG,kDAAiDhD,IAAI,GAAG,iCAAiC,GAAG,IAAK,WAAW;MAAC,OAAO,EAAE,MAAMM,UAAU,CAAC+B,KAAK,EAAG;MAAA,uBAC3K;QAAK,EAAE,EAAC,WAAW;QAAC,SAAS,EAAC,+BAA+B;QAAA,uBACzD;UAAG,EAAE,EAAC,WAAW;UAAC,SAAS,EAAC,EAAE;UAAA,UAAEC,cAAc,CAACvC,IAAI;QAAC;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA;IACvD;MAAA;MAAA;MAAA;IAAA,QACJ,EACLC,IAAI,gBAAG;MAAG,SAAS,EAAC,UAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgC,GAAG,IAAI,eACtE,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,EACXI,SAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACR;AAEd;AAAC,GA3LuBP,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}