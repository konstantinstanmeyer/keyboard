{"ast":null,"code":"var _jsxFileName = \"/Users/konstantinstanmeyer/Development/code/practices/keyboard/src/Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Test() {\n  _s();\n  const [wordsArray, setWordsArray] = useState([]);\n  const words = [\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"];\n  useEffect(() => {\n    setWordsArray(words);\n  }, []);\n  function iterate(word) {\n    let letters = [];\n    for (let i = 0; i < word.length; i++) {\n      letters.push( /*#__PURE__*/_jsxDEV(\"letter\", {\n        className: \"text-lg\",\n        children: word[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 26\n      }, this));\n    }\n    return letters;\n  }\n  function createWords(words) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: iterate(words)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-x\",\n    children: wordsArray.map(word => {\n      return createWords(word);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Test, \"ZaxE8tcFyMp9Hw+NXOmFNdwTu2g=\");\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","Test","wordsArray","setWordsArray","words","iterate","word","letters","i","length","push","createWords","map"],"sources":["/Users/konstantinstanmeyer/Development/code/practices/keyboard/src/Test.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport default function Test(){\n    const [wordsArray, setWordsArray] = useState([])\n    const words = [\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"]\n\n    useEffect(() => {\n        setWordsArray(words)\n    }, [])\n\n    function iterate(word){\n        let letters = []\n        for (let i = 0; i < word.length; i++) {\n            letters.push(<letter className=\"text-lg\">{word[i]}</letter>)\n        }\n        return letters;\n    }\n\n    function createWords(words){\n        return(\n            <div className=\"\">\n                {iterate(words)}\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"text-x\">{wordsArray.map((word) => {\n            return createWords(word)\n        })}            \n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEnD,eAAe,SAASC,IAAI,GAAE;EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMI,KAAK,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAErIL,SAAS,CAAC,MAAM;IACZI,aAAa,CAACC,KAAK,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,OAAO,CAACC,IAAI,EAAC;IAClB,IAAIC,OAAO,GAAG,EAAE;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MAClCD,OAAO,CAACG,IAAI,eAAC;QAAQ,SAAS,EAAC,SAAS;QAAA,UAAEJ,IAAI,CAACE,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAU,CAAC;IAChE;IACA,OAAOD,OAAO;EAClB;EAEA,SAASI,WAAW,CAACP,KAAK,EAAC;IACvB,oBACI;MAAK,SAAS,EAAC,EAAE;MAAA,UACZC,OAAO,CAACD,KAAK;IAAC;MAAA;MAAA;MAAA;IAAA,QACb;EAEd;EAEA,oBACI;IAAK,SAAS,EAAC,QAAQ;IAAA,UAAEF,UAAU,CAACU,GAAG,CAAEN,IAAI,IAAK;MAC9C,OAAOK,WAAW,CAACL,IAAI,CAAC;IAC5B,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACI;AAEd;AAAC,GA9BuBL,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}